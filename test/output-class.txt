{
    "root": {
        "class": {
            "CollectionWrapper": {
                "name": "CollectionWrapper",
                "type": "class",
                "func": {
                    "Add": {
                        "name": "Add",
                        "start": 37,
                        "end": 52,
                        "col": null,
                        "return_type": "Variant",
                        "visibility": "Public",
                        "source": "Public Function Add(objToAdd As Variant) As Variant\n    On Error GoTo ErrH\n    \n    If mTypeName = vbNullString _\n        Then mTypeName = TypeName(objToAdd)\n    \n    Call mCollection.Add(objToAdd)\n    \n    If IsObject(objToAdd) Then\n        Set Add = objToAdd\n    Else\n        Add = objToAdd\n    End If\n    \nErrH: Blame \"Add\"\nEnd Function",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "ret": [
                            "Add"
                        ],
                        "args": {
                            "objToAdd": {
                                "name": "objToAdd",
                                "has_default": null,
                                "scope": "CollectionWrapper.Add",
                                "optional": null,
                                "as_type": "Variant",
                                "type_hint": null
                            }
                        }
                    },
                    "NewEnum": {
                        "name": "NewEnum",
                        "start": 97,
                        "end": 101,
                        "col": null,
                        "return_type": "IUnknown",
                        "visibility": "Public",
                        "source": "Public Function NewEnum() As IUnknown\nAttribute NewEnum.VB_UserMemId = -4\nAttribute NewEnum.VB_MemberFlags = \"40\"\n    Set NewEnum = mCollection.[_NewEnum]\nEnd Function",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "ret": [
                            "NewEnum"
                        ]
                    }
                },
                "sub": {
                    "Clear": {
                        "name": "Clear",
                        "start": 55,
                        "end": 65,
                        "col": null,
                        "visibility": "Public",
                        "source": "Public Sub Clear()\n    On Error GoTo ErrH\n    With mCollection\n    \n        Dim i&: For i = 1 To .Count\n            Call .Remove(1)\n        Next i\n        \n    End With\nErrH: Blame \"Clear\"\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d"
                    },
                    "Remove": {
                        "name": "Remove",
                        "start": 88,
                        "end": 94,
                        "col": null,
                        "visibility": "Public",
                        "source": "Public Sub Remove(zeroBasedIndx As Long)\n    On Error GoTo ErrH\n    \n    Call mCollection.Remove(zeroBasedIndx + 1)\n    \nErrH: Blame \"Remove\"\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "args": {
                            "zeroBasedIndx": {
                                "name": "zeroBasedIndx",
                                "has_default": null,
                                "scope": "CollectionWrapper.Remove",
                                "optional": null,
                                "as_type": "Long",
                                "type_hint": null
                            }
                        }
                    },
                    "Class_Initialize": {
                        "name": "Class_Initialize",
                        "start": 113,
                        "end": 119,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub Class_Initialize()\n    On Error GoTo ErrH\n    \n    Set mCollection = New VBA.Collection\n    \nErrH: Blame \"Class_Initialize\"\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d"
                    },
                    "Class_Terminate": {
                        "name": "Class_Terminate",
                        "start": 121,
                        "end": 129,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub Class_Terminate()\n    On Error GoTo ErrH\n    \n    Call Me.Clear\n    \n    Set mCollection = Nothing\n    \nErrH: Blame \"Class_Terminate\"\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d"
                    },
                    "ErrorIf": {
                        "name": "ErrorIf",
                        "start": 142,
                        "end": 147,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub ErrorIf(errCondition As Boolean _\n                  , errorMsg As String _\n                  , Optional errorNumbr As CollectionWrapperErrors = -1 _\n                  )\n    If errCondition Then Err.Raise errorNumbr, TypeName(Me), errorMsg\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "args": {
                            "errCondition": {
                                "name": "errCondition",
                                "has_default": null,
                                "scope": "CollectionWrapper.ErrorIf",
                                "optional": null,
                                "as_type": "Boolean",
                                "type_hint": null
                            },
                            "errorMsg": {
                                "name": "errorMsg",
                                "has_default": null,
                                "scope": "CollectionWrapper.ErrorIf",
                                "optional": null,
                                "as_type": "String",
                                "type_hint": null
                            },
                            "errorNumbr": {
                                "name": "errorNumbr",
                                "has_default": true,
                                "scope": "CollectionWrapper.ErrorIf",
                                "optional": true,
                                "as_type": "CollectionWrapperErrors",
                                "type_hint": null,
                                "default": "-1"
                            }
                        }
                    },
                    "SaveError": {
                        "name": "SaveError",
                        "start": 149,
                        "end": 165,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub SaveError()\n    With mError\n        If Err Then\n            .HasError = True\n            .Description = Err.Description\n            .Number = Err.Number\n            .Source = Err.Source\n            \n        Else\n            .HasError = False\n            .Description = vbNullString\n            .Number = 0\n            .Source = vbNullString\n        End If\n    End With\n    Err.Clear\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d"
                    },
                    "Blame": {
                        "name": "Blame",
                        "start": 167,
                        "end": 173,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub Blame(ByVal currntProcedure As String _\n                , Optional ByVal errorDescrption As String _\n                , Optional ByVal errorNumbr As CollectionWrapperErrors = -1 _\n                )\n    Call SaveError\n    Call LoadError(currntProcedure, errorDescrption, errorNumbr)\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "args": {
                            "currntProcedure": {
                                "name": "currntProcedure",
                                "has_default": null,
                                "scope": "CollectionWrapper.Blame",
                                "optional": null,
                                "as_type": "String",
                                "type_hint": null
                            },
                            "errorDescrption": {
                                "name": "errorDescrption",
                                "has_default": null,
                                "scope": "CollectionWrapper.Blame",
                                "optional": true,
                                "as_type": "String",
                                "type_hint": null
                            },
                            "errorNumbr": {
                                "name": "errorNumbr",
                                "has_default": true,
                                "scope": "CollectionWrapper.Blame",
                                "optional": true,
                                "as_type": "CollectionWrapperErrors",
                                "type_hint": null,
                                "default": "-1"
                            }
                        }
                    },
                    "LoadError": {
                        "name": "LoadError",
                        "start": 175,
                        "end": 206,
                        "col": null,
                        "visibility": "Private",
                        "source": "Private Sub LoadError(ByVal currntProcedure As String _\n                    , Optional ByVal errorDescrption As String _\n                    , Optional ByVal errorNumbr As CollectionWrapperErrors = -1 _\n                    )\n    With mError\n        If Not .HasError Then Exit Sub\n            \n        If LenB(errorDescrption) = 0 Then\n            errorDescrption = .Description\n        Else\n            errorDescrption = .Description & vbCrLf & errorDescrption\n        End If\n        \n        currntProcedure = mTypeName & \"s\" _\n                        & \".\" & currntProcedure & \"()\"\n\n        If errorNumbr = -1 Then errorNumbr = .Number\n        \n        Select Case errorNumbr\n            Case NotInitted\n                errorDescrption = TypeName(Me) & \" not initted.\" & vbCrLf _\n                               & \"Please call \" & TypeName(Me) _\n                               & \".Init() before \" & currntProcedure & \".\"\n            \n            Case Else\n                errorDescrption = currntProcedure & vbCrLf & errorDescrption\n        End Select\n\n        Err.Raise errorNumbr, .Source, errorDescrption\n            \n    End With\nEnd Sub",
                        "scope": "CollectionWrapper",
                        "file": "./vb6-toolbox/Data Structures/CollectionWrapper.cls",
                        "hash": "89c763e9e607740d",
                        "args": {
                            "currntProcedure": {
                                "name": "currntProcedure",
                                "has_default": null,
                                "scope": "CollectionWrapper.LoadError",
                                "optional": null,
                                "as_type": "String",
                                "type_hint": null
                            },
                            "errorDescrption": {
                                "name": "errorDescrption",
                                "has_default": null,
                                "scope": "CollectionWrapper.LoadError",
                                "optional": true,
                                "as_type": "String",
                                "type_hint": null
                            },
                            "errorNumbr": {
                                "name": "errorNumbr",
                                "has_default": true,
                                "scope": "CollectionWrapper.LoadError",
                                "optional": true,
                                "as_type": "CollectionWrapperErrors",
                                "type_hint": null,
                                "default": "-1"
                            }
                        }
                    }
                }
            },
            "attributes": {
                "VB_Name": "\"CollectionWrapper\"",
                "VB_GlobalNameSpace": "False",
                "VB_Creatable": "True",
                "VB_PredeclaredId": "False",
                "VB_Exposed": "False"
            },
            "header": {
                "class": "CLASS",
                "version": "1.0"
            },
            "config": {
                "MultiUse": "-1",
                "Persistable": "0",
                "DataBindingBehavior": "0",
                "DataSourceBehavior": "0",
                "MTSTransactionMode": "0"
            },
            "options": {
                "Option Explicit": "Option Explicit"
            }
        }
    }
}
